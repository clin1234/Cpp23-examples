name: cmake

on:
  push:
    paths:
      - "**.cpp"
      - "**.ixx"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/cmake.yml"

env:
  CTEST_NO_TESTS_ACTION: error
  CTEST_PARALLEL_LEVEL: 0
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  HOMEBREW_NO_AUTO_UPDATE: 1


jobs:

  gcc-new:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    strategy:
      matrix:
        cxx: [g++-12, g++-13, g++-14, clang++-18]

    env:
      CXX: ${{ matrix.cxx }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Ninja
      run: sudo apt-get install ninja-build

    - run: cmake --workflow --preset debug

    - run: cmake --workflow --preset release

    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ matrix.cxx }}_features.json
        path: build/features.json


  gcc-old:
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    strategy:
      matrix:
        cxx: [g++-9, g++-10, g++-11]

    env:
      CXX: ${{ matrix.cxx }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Ninja
      run: sudo apt-get install ninja-build

    - run: cmake --workflow --preset debug

    - run: cmake --workflow --preset release

    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ matrix.cxx }}_features.json
        path: build/features.json


  mac:
    runs-on: macos-latest
    timeout-minutes: 5

    env:
      HOMEBREW_NO_AUTO_CLEANUP: 1
      CXX: ${{ matrix.cxx }}

    strategy:
      matrix:
        cxx: [clang++, g++-14]

    steps:
    - name: Install Ninja
      run: brew install ninja

    - uses: actions/checkout@v4

    - run: cmake --workflow --preset debug

    - run: cmake --workflow --preset release

    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ runner.os }}-${{ matrix.cxx }}_features.json
        path: build/features.json



  windows-msvc:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - run: cmake --workflow --preset msvc

    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ runner.os }}-MSVC_features.json
        path: build/features.json


  windows-gcc:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-gcc
# need GCC install to get latest G++

    - name: Put MSYS2_MinGW64 on PATH
      run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v4

    - run: cmake --workflow --preset debug

    - run: cmake --workflow --preset release

    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ${{ runner.os }}-GCC_features.json
        path: build/features.json
